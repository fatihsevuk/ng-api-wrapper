function digger(str, context) {
    return (str.match(/[\w\.]+/g) || [])
        .map(accessor => accessor.split('.')
        .reduce((a, i) => typeof a === 'object' ? a[i] : a, context));
}
function diggerStringParser(diggerString, context, type = 'squared-brackets') {
    let regex = /\[\[\s*[\w.]+\s*]]/g;
    switch (type) {
        case 'backticks':
            regex = /``\s*[\w.]+\s*``/g;
            break;
        case 'curly-brackets':
            regex = /{{\s*[\w.]+\s*}}/g;
            break;
    }
    return diggerString.replace(regex, (r) => digger(r, context).shift());
}

/*
 * Public API Surface of object-digger
 */

/**
 * Generated bundle index. Do not edit.
 */

export { digger, diggerStringParser };

//# sourceMappingURL=monabbous-object-digger.js.map