{"version":3,"sources":["ng://@monabbous/object-digger/lib/object-digger.util.ts"],"names":["digger","str","context","match","map","accessor","split","reduce","a","i","diggerString","type","regex","replace","r","shift"],"mappings":"0RAAgBA,EAAOC,EAAKC,GAC1B,OAAQD,EAAIE,MAAM,aAAe,IAC9BC,KAAI,SAAAC,GACH,OAAAA,EAASC,MAAM,KACZC,QAAO,SAACC,EAAGC,GAAM,MAAa,iBAAND,EAAiBA,EAAEC,GAAKD,IAAGN,+CAIzBQ,EAAcR,EAASS,QAAA,IAAAA,IAAAA,EAAA,oBACxD,IAAIC,EAAgB,sBACpB,OAAQD,GACN,IAAK,YACHC,EAAQ,oBACR,MACF,IAAK,iBACHA,EAAQ,oBAIZ,OAAOF,EAAaG,QAAQD,GAAO,SAACE,GAAM,OAAAd,EAAOc,EAAGZ,GAASa","sourcesContent":["export function digger(str, context) {\r\n  return (str.match(/[\\w\\.]+/g) || [])\r\n    .map(accessor =>\r\n      accessor.split('.')\r\n        .reduce((a, i) => typeof a === 'object' ? a[i] : a, context)\r\n    );\r\n}\r\n\r\nexport function diggerStringParser(diggerString, context, type: 'squared-brackets' | 'curly-brackets' | 'backticks' = 'squared-brackets') {\r\n  let regex: RegExp = /\\[\\[\\s*[\\w.]+\\s*]]/g;\r\n  switch (type) {\r\n    case 'backticks':\r\n      regex = /``\\s*[\\w.]+\\s*``/g;\r\n      break;\r\n    case 'curly-brackets':\r\n      regex = /{{\\s*[\\w.]+\\s*}}/g;\r\n      break;\r\n  }\r\n\r\n  return diggerString.replace(regex, (r) => digger(r, context).shift());\r\n}\r\n"]}