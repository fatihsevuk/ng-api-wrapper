export function digger(str, context) {
    return (str.match(/[\w\.]+/g) || [])
        .map(accessor => accessor.split('.')
        .reduce((a, i) => typeof a === 'object' ? a[i] : a, context));
}
export function diggerStringParser(diggerString, context, type = 'squared-brackets') {
    let regex = /\[\[\s*[\w.]+\s*]]/g;
    switch (type) {
        case 'backticks':
            regex = /``\s*[\w.]+\s*``/g;
            break;
        case 'curly-brackets':
            regex = /{{\s*[\w.]+\s*}}/g;
            break;
    }
    return diggerString.replace(regex, (r) => digger(r, context).shift());
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2JqZWN0LWRpZ2dlci51dGlsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG1vbmFiYm91cy9vYmplY3QtZGlnZ2VyLyIsInNvdXJjZXMiOlsibGliL29iamVjdC1kaWdnZXIudXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLFVBQVUsTUFBTSxDQUFDLEdBQUcsRUFBRSxPQUFPO0lBQ2pDLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUNqQyxHQUFHLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FDZCxRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztTQUNoQixNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUMvRCxDQUFDO0FBQ04sQ0FBQztBQUVELE1BQU0sVUFBVSxrQkFBa0IsQ0FBQyxZQUFZLEVBQUUsT0FBTyxFQUFFLE9BQTRELGtCQUFrQjtJQUN0SSxJQUFJLEtBQUssR0FBVyxxQkFBcUIsQ0FBQztJQUMxQyxRQUFRLElBQUksRUFBRTtRQUNaLEtBQUssV0FBVztZQUNkLEtBQUssR0FBRyxtQkFBbUIsQ0FBQztZQUM1QixNQUFNO1FBQ1IsS0FBSyxnQkFBZ0I7WUFDbkIsS0FBSyxHQUFHLG1CQUFtQixDQUFDO1lBQzVCLE1BQU07S0FDVDtJQUVELE9BQU8sWUFBWSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztBQUN4RSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGRpZ2dlcihzdHIsIGNvbnRleHQpIHtcclxuICByZXR1cm4gKHN0ci5tYXRjaCgvW1xcd1xcLl0rL2cpIHx8IFtdKVxyXG4gICAgLm1hcChhY2Nlc3NvciA9PlxyXG4gICAgICBhY2Nlc3Nvci5zcGxpdCgnLicpXHJcbiAgICAgICAgLnJlZHVjZSgoYSwgaSkgPT4gdHlwZW9mIGEgPT09ICdvYmplY3QnID8gYVtpXSA6IGEsIGNvbnRleHQpXHJcbiAgICApO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZGlnZ2VyU3RyaW5nUGFyc2VyKGRpZ2dlclN0cmluZywgY29udGV4dCwgdHlwZTogJ3NxdWFyZWQtYnJhY2tldHMnIHwgJ2N1cmx5LWJyYWNrZXRzJyB8ICdiYWNrdGlja3MnID0gJ3NxdWFyZWQtYnJhY2tldHMnKSB7XHJcbiAgbGV0IHJlZ2V4OiBSZWdFeHAgPSAvXFxbXFxbXFxzKltcXHcuXStcXHMqXV0vZztcclxuICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgIGNhc2UgJ2JhY2t0aWNrcyc6XHJcbiAgICAgIHJlZ2V4ID0gL2BgXFxzKltcXHcuXStcXHMqYGAvZztcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlICdjdXJseS1icmFja2V0cyc6XHJcbiAgICAgIHJlZ2V4ID0gL3t7XFxzKltcXHcuXStcXHMqfX0vZztcclxuICAgICAgYnJlYWs7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gZGlnZ2VyU3RyaW5nLnJlcGxhY2UocmVnZXgsIChyKSA9PiBkaWdnZXIociwgY29udGV4dCkuc2hpZnQoKSk7XHJcbn1cclxuIl19