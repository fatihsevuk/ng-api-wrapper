import { __values } from 'tslib';

function unflatter(json) {
    var e_1, _a;
    var newJson = {};
    var _loop_1 = function (key) {
        var value = json[key];
        if (value === undefined || value === 'undefined') {
            return "continue";
        }
        if (/(?!\s*\[\s*hidden\s*]\s*)|\s*\[\s*[\w]+\s*]\s*/g.test(key)) {
            var keys_1 = key.split(/\[\s*([\w]+)\s*]/g)
                .filter(function (f) { return f !== ''; });
            keys_1.reduce(function (b, k, i) {
                if (b === undefined) {
                    b = {};
                }
                if (i < keys_1.length - 1) {
                    b[k] = b[k] || {};
                    return b[k];
                }
                else {
                    b[k] = value;
                }
                return b;
            }, newJson);
        }
        else {
            newJson[key] = value;
        }
    };
    try {
        for (var _b = __values(Object.keys(json)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            _loop_1(key);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return newJson;
}

/*
 * Public API Surface of unflatter
 */

/**
 * Generated bundle index. Do not edit.
 */

export { unflatter };
//# sourceMappingURL=monabbous-unflatter.js.map
