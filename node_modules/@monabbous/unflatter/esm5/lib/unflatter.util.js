import { __values } from "tslib";
export function unflatter(json) {
    var e_1, _a;
    var newJson = {};
    var _loop_1 = function (key) {
        var value = json[key];
        if (value === undefined || value === 'undefined') {
            return "continue";
        }
        if (/(?!\s*\[\s*hidden\s*]\s*)|\s*\[\s*[\w]+\s*]\s*/g.test(key)) {
            var keys_1 = key.split(/\[\s*([\w]+)\s*]/g)
                .filter(function (f) { return f !== ''; });
            keys_1.reduce(function (b, k, i) {
                if (b === undefined) {
                    b = {};
                }
                if (i < keys_1.length - 1) {
                    b[k] = b[k] || {};
                    return b[k];
                }
                else {
                    b[k] = value;
                }
                return b;
            }, newJson);
        }
        else {
            newJson[key] = value;
        }
    };
    try {
        for (var _b = __values(Object.keys(json)), _c = _b.next(); !_c.done; _c = _b.next()) {
            var key = _c.value;
            _loop_1(key);
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return newJson;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5mbGF0dGVyLnV0aWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbW9uYWJib3VzL3VuZmxhdHRlci8iLCJzb3VyY2VzIjpbImxpYi91bmZsYXR0ZXIudXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsTUFBTSxVQUFVLFNBQVMsQ0FBQyxJQUFJOztJQUM1QixJQUFNLE9BQU8sR0FBRyxFQUFFLENBQUM7NEJBQ1IsR0FBRztRQUNaLElBQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN4QixJQUFJLEtBQUssS0FBSyxTQUFTLElBQUksS0FBSyxLQUFLLFdBQVcsRUFBRTs7U0FFakQ7UUFDRCxJQUFJLGlEQUFpRCxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUMvRCxJQUFNLE1BQUksR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLG1CQUFtQixDQUFDO2lCQUN4QyxNQUFNLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxDQUFDLEtBQUssRUFBRSxFQUFSLENBQVEsQ0FBQyxDQUFDO1lBQ3pCLE1BQUksQ0FBQyxNQUFNLENBQUMsVUFBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUM7Z0JBQ2xCLElBQUksQ0FBQyxLQUFLLFNBQVMsRUFBRTtvQkFDbkIsQ0FBQyxHQUFHLEVBQUUsQ0FBQztpQkFDUjtnQkFDRCxJQUFJLENBQUMsR0FBRyxNQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtvQkFDdkIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7b0JBQ2xCLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2lCQUNiO3FCQUFNO29CQUNMLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUM7aUJBQ2Q7Z0JBQ0QsT0FBTyxDQUFDLENBQUM7WUFDWCxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUM7U0FDYjthQUFNO1lBQ0wsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQztTQUN0Qjs7O1FBdEJILEtBQWtCLElBQUEsS0FBQSxTQUFBLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUEsZ0JBQUE7WUFBOUIsSUFBTSxHQUFHLFdBQUE7b0JBQUgsR0FBRztTQXVCYjs7Ozs7Ozs7O0lBQ0QsT0FBTyxPQUFPLENBQUM7QUFDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5leHBvcnQgZnVuY3Rpb24gdW5mbGF0dGVyKGpzb24pIHtcclxuICBjb25zdCBuZXdKc29uID0ge307XHJcbiAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMoanNvbikpIHtcclxuICAgIGNvbnN0IHZhbHVlID0ganNvbltrZXldO1xyXG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgIGNvbnRpbnVlO1xyXG4gICAgfVxyXG4gICAgaWYgKC8oPyFcXHMqXFxbXFxzKmhpZGRlblxccypdXFxzKil8XFxzKlxcW1xccypbXFx3XStcXHMqXVxccyovZy50ZXN0KGtleSkpIHtcclxuICAgICAgY29uc3Qga2V5cyA9IGtleS5zcGxpdCgvXFxbXFxzKihbXFx3XSspXFxzKl0vZylcclxuICAgICAgICAuZmlsdGVyKGYgPT4gZiAhPT0gJycpO1xyXG4gICAgICBrZXlzLnJlZHVjZSgoYiwgaywgaSkgPT4ge1xyXG4gICAgICAgIGlmIChiID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgIGIgPSB7fTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGkgPCBrZXlzLmxlbmd0aCAtIDEpIHtcclxuICAgICAgICAgIGJba10gPSBiW2tdIHx8IHt9O1xyXG4gICAgICAgICAgcmV0dXJuIGJba107XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGJba10gPSB2YWx1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGI7XHJcbiAgICAgIH0sIG5ld0pzb24pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgbmV3SnNvbltrZXldID0gdmFsdWU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBuZXdKc29uO1xyXG59XHJcbiJdfQ==